---
import Layout from "@layouts/Layout.astro";
import BlogCard from "@components/BlogCard.astro";
import HeroBlob from "@images/blobs.png"
import BlogImage from "@components/BlogImage.astro";

interface Frontmatter {
  title: string;
  pubDate: string;
  description: string;
}

const metadata = {
  title: "Webskidev blog",
  description: "Minimalistyczny blog Piotra Morka, poświęcony programowanku",
};

let blogs = await Astro.glob<Frontmatter>("./posts/*.mdx");
blogs = blogs.sort((a, b) => new Date(b.frontmatter.pubDate).valueOf() - new Date(a.frontmatter.pubDate).valueOf());
---

<Layout {...metadata}>
  <section class="flex flex-col sm:flex-row justify-evenly items-center py-4 gap-2">
    <div class="w-full">
      <BlogImage src={HeroBlob} alt="Hero"/>
    </div>
    <header class="max-w-md sm:order-first">
      <h1 class="text-3xl sm:text-6xl font-bold mb-7 md:mb-5 text-center sm:text-left">Webski development</h1>
      <p class="text-black dark:text-zinc-300 mb-5">Siema, jestem Piotr i na codzień robie frontendy. Tutaj dziele się swoim kodem, pomysłami i przemyśleniami na temat programowanka.</p>
    </header>
  </section>
  <section class="py-6">
    <h1 class="text-2xl sm:text-3xl font-bold mb-5">Ostatnie posty</h1> 
    <ul class="flex flex-col justify-center py-5">
      {
        blogs.length > 0 &&
          blogs.slice(0, 2).map((post) => <BlogCard title={post.frontmatter.title} description={post.frontmatter.description} pubDate={post.frontmatter.pubDate} url={post.url} />)
      }
    </ul>
    <div class="text-center dark:text-zinc-300 text-zinc-200 mt-5">
      <a class="flex items-center dark:bg-zinc-800 bg-zinc-200 dark:ring-zinc-700 hover:ring-2 ring-zinc-300 transition-all dark:text-white flex-col m-2 p-2 rounded-xl text-black" href="/posts">Pokaż więcej</a>
    </div>
  </section>
</Layout>
